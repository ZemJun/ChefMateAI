# Generated by Django 5.2.1 on 2025-05-12 05:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("recipes", "0002_recipeingredient_recipe_ingredients"),
        ("users", "0003_user_dietary_preferences_user_disliked_ingredients"),
    ]

    operations = [
        migrations.CreateModel(
            name="ShoppingListItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.FloatField(blank=True, null=True, verbose_name="建议数量"),
                ),
                (
                    "unit",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="建议单位"
                    ),
                ),
                (
                    "is_purchased",
                    models.BooleanField(default=False, verbose_name="已购买"),
                ),
                (
                    "added_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="添加时间"),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="recipes.ingredient",
                        verbose_name="食材",
                    ),
                ),
                (
                    "related_recipe",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="recipes.recipe",
                        verbose_name="关联菜谱",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "购物清单项",
                "verbose_name_plural": "购物清单项",
                "ordering": ["user", "is_purchased", "added_at"],
            },
        ),
        migrations.CreateModel(
            name="UserInventoryItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="备注"
                    ),
                ),
                (
                    "added_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="添加时间"),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="recipes.ingredient",
                        verbose_name="食材",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户库存食材",
                "verbose_name_plural": "用户库存食材",
                "ordering": ["user", "added_at"],
                "unique_together": {("user", "ingredient")},
            },
        ),
    ]
